services:
  reservation-api:
    container_name: reservation-api
    build:
      context: reservation-api
    ports:
      - "8080:8080"
    depends_on:
      - reservation-db
      - reservation-rabbitmq
      - reservation-redis
    environment:
      - DATASOURCE_URL=jdbc:postgresql://reservation-db:5432/reservation
      - DATASOURCE_USERNAME=postgres
      - DATASOURCE_PASSWORD=postgres
      - JPA_HIBERNATE_DDL_AUTO=validate
      - QUEUE_HOST=reservation-rabbitmq
      - QUEUE_PORT=5672
      - QUEUE_USERNAME=admin
      - QUEUE_PASSWORD=admin
      - CACHE_HOST=reservation-redis
      - CACHE_PORT=6379
      - CACHE_PASSWORD=admin

  reservation-batch:
    container_name: reservation-batch
    build:
      context: reservation-batch
    depends_on:
      - reservation-db
      - reservation-rabbitmq
      - reservation-redis
    environment:
      - DATASOURCE_URL=jdbc:postgresql://reservation-db:5432/reservation
      - DATASOURCE_USERNAME=postgres
      - DATASOURCE_PASSWORD=postgres
      - JPA_HIBERNATE_DDL_AUTO=validate

  reservation-notification:
    container_name: reservation-notification
    build:
      context: reservation-notification
    depends_on:
      - reservation-db
      - reservation-rabbitmq
      - reservation-redis
    environment:
      - DATASOURCE_URL=jdbc:postgresql://reservation-db:5432/reservation
      - DATASOURCE_USERNAME=postgres
      - DATASOURCE_PASSWORD=postgres
      - JPA_HIBERNATE_DDL_AUTO=validate
      - QUEUE_HOST=reservation-rabbitmq
      - QUEUE_PORT=5672
      - QUEUE_USERNAME=admin
      - QUEUE_PASSWORD=admin

  reservation-db:
    container_name: reservation-db
    image: 'postgres:17.4-alpine'
    environment:
      - POSTGRES_DB=reservation
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./infrastructure/reservation-db-schema.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d reservation"]
      interval: 10s
      timeout: 5s
      retries: 5

  reservation-rabbitmq:
    image: rabbitmq:3.12-management
    container_name: reservation-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbitmq_management load_definitions \"/etc/rabbitmq/definitions.json\""
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./infrastructure/rabbitmq-definitions.json:/etc/rabbitmq/definitions.json

  reservation-redis:
    image: redis:7.4-alpine
    container_name: reservation-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=admin
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
    command: ["redis-server"]
    volumes:
      - redis_data:/data

volumes:
  pgdata:
  rabbitmq_data:
    driver: local
  redis_data: